<modification>
	<id>All Products Page FREE for OpenCart</id>
	<version>1.0.0</version>
	<vqmver>2.4.0</vqmver>
	<author>garudacrafts</author>
	<notes>
		- adds "All Products" page with route=product/allproducts
		- includes multiple Sorting options
		- adds "All Products" link to header navigation menu
		- adds new breadcrumb "All Products" Product pages
		- uses caching for database queries to improve page load speed
	</notes>
	
	<file name="catalog/language/english/common/header.php,catalog/language/english/product/category.php,catalog/language/english/product/product.php">
		<operation>
			<search position="bottom" offset="2"></search>
			<add><![CDATA[
			$_['text_all_products']		= 'All Products';
			]]></add>
		</operation>
	</file>
	
	<file name="catalog/language/english/product/category.php">
		<operation>
			<search position="bottom" offset="2"></search>
			<add><![CDATA[
			$_['text_date_asc']   			= 'Date (Old &gt; New)';
			$_['text_date_desc']  			= 'Date (New &gt; Old)';
			]]></add>
		</operation>
	</file>
	
	<file name="catalog/controller/common/header.php">
		<operation>
			<search position="after"><![CDATA[
			$this->data['text_checkout']
			]]></search>			
			<add><![CDATA[
			$this->data['text_all_products'] = $this->language->get('text_all_products');
			$this->data['all_products'] = $this->url->link('product/allproducts');
			]]></add>
		</operation>
	</file>
	
	<file name="catalog/view/theme/*/template/common/header.tpl">
		<operation>
			<search position="before"><![CDATA[
			 <?php foreach ($categories as $category) { ?>
			]]></search>
			<add><![CDATA[
			<li><a href="<?php echo $all_products; ?>"><?php echo $text_all_products; ?></a></li>
			]]></add>
		</operation>
	</file>
	
	<file name="catalog/controller/product/product.php">
		<operation>
			<search position="after" offset="2"><![CDATA[
			$this->url->link('common/home'),
			]]></search>			
			<add><![CDATA[
			$this->data['breadcrumbs'][] = array(
				'text'      => $this->language->get('text_all_products'),
				'href'      => $this->url->link('product/allproducts'),
				'separator' => $this->language->get('text_separator')
			);
			]]></add>
		</operation>
	</file>
	
	<file name="catalog/model/catalog/product.php">
		<operation>
			<search position="before"><![CDATA[
			function getProduct(
			]]></search>
			<add><![CDATA[
			public function getProductsAll($data = array()) {
				if ($this->customer->isLogged()) {
					$customer_group_id = $this->customer->getCustomerGroupId();
				} else {
					$customer_group_id = $this->config->get('config_customer_group_id');
				}	
				
				$cache = md5(http_build_query($data));
				
				$product_data = $this->cache->get('product.all.' . (int)$this->config->get('config_language_id') . '.' . (int)$this->config->get('config_store_id') . '.' . (int)$customer_group_id . '.' . $cache);
				
				if (!$product_data) {
					$sql = "SELECT p.product_id, (SELECT AVG(rating) AS total FROM " . DB_PREFIX . "review r1 WHERE r1.product_id = p.product_id AND r1.status = '1' GROUP BY r1.product_id) AS rating, (SELECT price FROM " . DB_PREFIX . "product_discount pd2 WHERE pd2.product_id = p.product_id AND pd2.customer_group_id = '" . (int)$customer_group_id . "' AND pd2.quantity = '1' AND ((pd2.date_start = '0000-00-00' OR pd2.date_start < NOW()) AND (pd2.date_end = '0000-00-00' OR pd2.date_end > NOW())) ORDER BY pd2.priority ASC, pd2.price ASC LIMIT 1) AS discount, (SELECT price FROM " . DB_PREFIX . "product_special ps WHERE ps.product_id = p.product_id AND ps.customer_group_id = '" . (int)$customer_group_id . "' AND ((ps.date_start = '0000-00-00' OR ps.date_start < NOW()) AND (ps.date_end = '0000-00-00' OR ps.date_end > NOW())) ORDER BY ps.priority ASC, ps.price ASC LIMIT 1) AS special FROM " . DB_PREFIX . "product p LEFT JOIN " . DB_PREFIX . "product_description pd ON (p.product_id = pd.product_id) LEFT JOIN " . DB_PREFIX . "product_to_store p2s ON (p.product_id = p2s.product_id) WHERE pd.language_id = '" . (int)$this->config->get('config_language_id') . "' AND p.status = '1' AND p.date_available <= NOW() AND p2s.store_id = '" . (int)$this->config->get('config_store_id') . "' GROUP BY p.product_id";
					
					$sort_data = array(
						'pd.name',
						'p.model',
						'p.quantity',
						'p.price',
						'rating',
						'p.sort_order',
						'p.date_added'
					);
					
					if (isset($data['sort']) && in_array($data['sort'], $sort_data)) {
						if ($data['sort'] == 'pd.name' || $data['sort'] == 'p.model') {
							$sql .= " ORDER BY LCASE(" . $data['sort'] . ")";
						} elseif ($data['sort'] == 'p.price') {
							$sql .= " ORDER BY (CASE WHEN special IS NOT NULL THEN special WHEN discount IS NOT NULL THEN discount ELSE p.price END)";
						} else {
							$sql .= " ORDER BY " . $data['sort'];
						}
					} else {
						$sql .= " ORDER BY p.sort_order";	
					}
			
					if (isset($data['order']) && ($data['order'] == 'DESC')) {
						$sql .= " DESC, LCASE(pd.name) DESC";
					} else {
						$sql .= " ASC, LCASE(pd.name) ASC";
					}
				
					if (isset($data['start']) || isset($data['limit'])) {
						if ($data['start'] < 0) {
							$data['start'] = 0;
						}				
			
						if ($data['limit'] < 1) {
							$data['limit'] = 20;
						}	
					
						$sql .= " LIMIT " . (int)$data['start'] . "," . (int)$data['limit'];
					}
					
					$product_data = array();
							
					$query = $this->db->query($sql);
				
					foreach ($query->rows as $result) {
						$product_data[$result['product_id']] = $this->getProduct($result['product_id']);
					}
					
					$this->cache->set('product.all.' . (int)$this->config->get('config_language_id') . '.' . (int)$this->config->get('config_store_id') . '.' . (int)$customer_group_id . '.' . $cache, $product_data);
				}
				
				return $product_data;
			}
			]]></add>
		</operation>
	</file>
	
</modification>